#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using ull = unsigned long long;

const ll MOD = 1e9 + 7;

double index_of_coincidence(string s, int key_length) {
	int N = s.length();

	map<char, int> freq;
	for (auto x : s) {
		freq[x]++;
	}

	double ioc = 0;
	for (auto x : freq) {
		ioc += 1.0 * (x.second) * (max(x.second - 1, 0));
	}

	int denom = N * (N - 1);
	ioc = ioc / denom;
	return ioc;
}

int main() {
	string cipher_text = "NFMZBBMRTIOCCXCLASTRMPUJGUYABTKCIZLYURTPZSCVNDAGEVFDPTGIWTOYXVADFSYZMXSYTCWIASKMOABRKFLDYAGEKXUBKJRGNZETOBTCPUYQESUEEDMRJVKPCCXURXCGPXDDKQKJBTOGPURWBGOJSRPCPTCXMAGBEHFMWKFXGYGSOJARJVUDGRKIOUZAKVLRXOTUHDDGVYYHIFUMECAMDVQJVVGSODUGPFSGEWBVSBVQVZKEHFZRNISWUTGTGQKYAHOCNGCSWSBVLDWYIICPMQOMIAPXCKGDGORCTWLYFMYCVSSVNIZRJRRBTBNRSQLCPRZAXHUDAZLYTVUXMVZYEWLJRFDHVWKECTVLNPFDPSBVRXAUQERQXKXFNVAMURWIAOZJCXLLEVGHTHCFESNCFJUDKROKCDTCUNGIAWZJOLUQGKMUTRBRNIHEGJYCWROJASCYPKYVXGZFSPFRJRRHVWKECTOYURJDMCLSECLDKKQLHIRUBTHLWEBTKGZRTTTCPKRWXPKEEUPRUFDHVWKECTKMPFRYNGZCIBPRVFMCXGVYEGLZWKGIAOYGRDCCPLQTYIRZNKHPKFSHLDNVRTZMHKFTPCXCDLOCPNCITZQRBDBRKELDOOZZOCZGPJAXXBIVACKCPXGCXSXZNVLJGTRGBQOKYXZRJVDXKGZKHXUEVYYIVCSVSIVKKEBXMVGJHTSNGUNDPSXKHTDMTCBIAFULGWPRUUCKXZUGMTURCJRWXGGPICNEQVQIASXVIHUMTRGCUCCNIIOMWKPPBBYZMXSYTCWHVWKECTOYUUPPPPGTKHVDKKQDPBUEEBBQVRJLTMYIEBLKDVPIAOZRNNAFKEEXGSDTEHZGUGMXLCTRNSZAKVLRXWYEOSPDHVPTGHOWIIMYNCQXGHUVVXSFCEBHBHIRNRHSUVBTLHXLCIPMPFLPFOYJIKLJGMCA";
	int str_len = cipher_text.length();

	int key_length = 12;

	for (int i = 0; i < key_length; i++) {
		string cur = "";
		for (int j = i; j < str_len; j += key_length) {
			cur += cipher_text[j];
		}

		double ioc = index_of_coincidence(cur, key_length);
		cout << "IOC of Subsequence " << (i + 1) << " : " << ioc << "\n";
	}

	return 0;
}
